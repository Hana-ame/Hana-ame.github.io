{"version":3,"file":"static/js/171.23ad9b2e.chunk.js","mappings":"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","sources":["Tools/localstorage/useLocalStorageStatus.tsx","kuuki-mouse/InputBar.tsx","kuuki-mouse/ItemList.tsx","kuuki-mouse/ModeSelector.tsx","kuuki-mouse/MousePad.tsx","kuuki-mouse/KeyBoard.tsx","kuuki-mouse/TextAreaWithButton.tsx","kuuki-mouse/App.tsx","kuuki-mouse/websocket.js","kuuki-mouse/KuukiMouse.tsx"],"sourcesContent":["import { useState, useEffect, useCallback, Dispatch, SetStateAction } from 'react';\n\n// 类型定义，让 Hook 的返回值更清晰\ntype UseLocalStorageReturn<T> = [\n    T, // 存储的值\n    Dispatch<SetStateAction<T>>, // 更新值的函数，API 与 useState 的 setter 相同\n    Error | null // 错误状态\n];\n\n/**\n * 一个与 React.useState API 类似，但将状态持久化到 localStorage 的 Hook。\n * 它还支持跨标签页的同步和错误处理。\n * \n * @param key - 在 localStorage 中使用的键。\n * @param initialValue - 如果 localStorage 中没有值，则使用的初始值。\n * @returns [storedValue, setValue, error] - 一个包含当前值、更新函数和错误状态的数组。\n */\nexport default function useLocalStorage<T>(key: string, initialValue: T): UseLocalStorageReturn<T> {\n    // 初始化 initial Value\n    // 使用一个函数作为 useState 的初始值，以确保 localStorage.getItem 只在客户端初始渲染时执行一次。\n    // 这可以避免性能问题，并防止在 SSR (服务器端渲染) 环境下因 window 未定义而出错。\n    const [storedValue, setStoredValue] = useState<T>(() => {\n        // 如果在非浏览器环境（如 Next.js 服务器端），直接返回初始值\n        if (typeof window === 'undefined') {\n            return initialValue;\n        }\n\n        try {\n            // 尝试从 localStorage 获取已存在的值\n            const item = window.localStorage.getItem(key);\n            // 如果有值，则解析它；否则，返回初始值\n            return item ? (JSON.parse(item) as T) : initialValue;\n        } catch (error) {\n            // 如果解析出错，则打印错误并返回初始值\n            console.error(`Error reading localStorage key “${key}”:`, error);\n            return initialValue;\n        }\n    });\n\n    // 状态2: 存储可能发生的错误\n    const [error, setError] = useState<Error | null>(null);\n\n    // 使用 useCallback 来包装 setValue 函数，以确保其引用在渲染间保持稳定，\n    // 除非其依赖项（storedValue）发生变化。\n    // 不加入 storedValue会出现旧值。\n    const setValue: Dispatch<SetStateAction<T>> = useCallback(\n        (value) => {\n            try {\n                // 允许传入一个函数来计算新值，就像 useState 的 setter 一样\n                const valueToStore = value instanceof Function ? value(storedValue) : value;\n\n                setStoredValue(valueToStore);\n\n                if (typeof window !== 'undefined') {\n                    const newValue = JSON.stringify(valueToStore);\n                    // 在浏览器环境中，将新值持久化到 localStorage\n                    window.localStorage.setItem(key, newValue);\n                    // 手动触发一个 storage 事件，以便同一页面内的其他 Hook 实例也能同步\n                    // `storage` 事件通常只通知其他页面\n                    // isTrusted = false, 且需要自己填数字。\n                    window.dispatchEvent(new StorageEvent('storage', { key, newValue }));\n                } else {\n                    // 更新 React 状态\n                }\n\n            } catch (err) {\n                // 如果 stringify 出错，则捕获并更新错误状态\n                const e = err as Error;\n                console.error(`Error setting localStorage key “${key}”:`, e);\n                setError(e);\n            }\n        },\n        [key, storedValue]\n    );\n\n    // Effect: 监听 localStorage 的 'storage' 事件\n    // 这个事件在其他标签页（或 iframe）修改了 localStorage 时触发\n    useEffect(() => {\n        // 确保在浏览器环境中执行\n        if (typeof window === 'undefined') return;\n\n        const handleStorageChange = (event: StorageEvent) => {\n            // 当事件对应的 key 是我们正在监听的 key，并且有新值时\n            console.log(event, event.key === key, event.newValue)\n            if (event.key === key && event.newValue) {\n                try {\n                    setStoredValue(JSON.parse(event.newValue) as T);\n                    setError(null); // 同步成功，清除错误\n                } catch (err) {\n                    const e = err as Error;\n                    console.error(`Error parsing new value for key “${key}” from storage event:`, e);\n                    setError(e);\n                }\n            }\n        };\n\n        // 添加事件监听器\n        window.addEventListener('storage', handleStorageChange);\n\n        // 清理函数：在组件卸载时移除监听器，防止内存泄漏\n        return () => {\n            window.removeEventListener('storage', handleStorageChange);\n        };\n    }, [key]); // 依赖数组中只有 key，因此只在 key 改变时重新绑定事件监听\n\n    return [storedValue, setValue, error];\n}","import React, { useState, ChangeEvent, KeyboardEvent } from 'react';\n\n// 1. 首先定义组件的 Props 接口\ninterface InputBarProps {\n    // onSubmit 是一个函数类型，它接收一个 string 类型的参数 (url)，并且没有返回值 (void)\n    onSubmit?: (url: string) => void;\n}\n\n// 2. 使用 React.FC (FunctionComponent) 泛型类型并传入上面定义的 Props 类型\n// 同时为 onSubmit 提供一个默认值，确保即使未传入该 prop 也能正常工作\nconst InputBar: React.FC<InputBarProps> = ({\n    onSubmit = (url: string) => { console.log(\"Submitted URL: \" + url) }\n}) => {\n    // 3. 使用 useState 来管理输入框的值，并明确其类型为 string\n    const [inputValue, setInputValue] = useState<string>('');\n\n    // 4. 处理输入框变化事件，使用 React.ChangeEvent 泛型类型指定事件目标为 HTMLInputElement\n    const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setInputValue(e.target.value);\n    };\n\n    // 5. 处理按键事件，特别是回车键提交\n    const handleKeyPress = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter') {\n            handleSubmit();\n        }\n    };\n\n    // 6. 提交处理函数\n    const handleSubmit = () => {\n        if (inputValue.trim()) { // 简单的非空验证\n            onSubmit(inputValue.trim()); // 调用从 props 传入的 onSubmit 函数\n            setInputValue(''); // 清空输入框\n        }\n    };\n\n    return (\n        <div className=\"flex p-2.5\"> {/* 使用flex和padding工具类 */}\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n                onKeyDown={handleKeyPress}\n                placeholder=\"Type your message or URL...\"\n                className=\"flex-grow mr-2 p-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\" /* 替换所有内联样式并添加边框、圆角、焦点样式 */\n            />\n            <button\n                onClick={handleSubmit}\n                className=\"px-4 py-2 bg-blue-500 text-white font-medium rounded hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\" /* 替换内联样式并添加背景色、悬停、焦点等交互样式 */\n            >\n                Submit\n            </button>\n        </div>\n    );\n\n};\n\nexport default InputBar;","export default function ItemList({ \n  items, \n  onItemClick, \n  onDeleteItem \n}: { \n  items: string[]; \n  onItemClick?: (item: string) => void;\n  onDeleteItem?: (index: number) => void;\n}) {\n  return (\n    <ul className=\"space-y-3\"> {/* 列表项之间添加垂直间距 */}\n      {items.map((item, index) => (\n        <li \n          key={index} \n          className=\"flex justify-between items-center p-4 bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200 cursor-default\"\n        >\n          {/* 可点击的文本区域，点击时触发 onItemClick 并传入当前项目标题 */}\n          <span \n            className=\"flex-1 cursor-pointer text-gray-800 hover:text-blue-600 transition-colors duration-150\"\n            onClick={() => onItemClick?.(item)} // 使用可选链操作符防止未定义错误\n          >\n            {item}\n          </span>\n          {/* 删除按钮，点击时触发 onDeleteItem 并传入当前索引 */}\n          <button \n            className=\"ml-4 bg-red-500 hover:bg-red-700 text-white font-semibold py-1 px-3 rounded-md transition-colors duration-150\"\n            onClick={() => onDeleteItem?.(index)} // 使用可选链操作符防止未定义错误\n            aria-label=\"删除项目\"\n          >\n            ×\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}","export default function ModeSelector({ mode, setMode }: { mode: string; setMode: (mode: string) => void }) {\n  return (\n    <nav className=\"flex w-full bg-gray-100 rounded-lg p-1 shadow-sm\">\n      <button\n        onClick={() => setMode(\"mouse-pad\")}\n        className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 ${\n          mode === \"mouse-pad\"\n            ? \"bg-white text-blue-600 shadow-md\" // 选中状态样式\n            : \"bg-transparent text-gray-600 hover:bg-gray-200\" // 默认状态样式\n        }`}\n      >\n        Mouse Pad\n      </button>\n      <button\n        onClick={() => setMode(\"keyboard\")}\n        className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 ${\n          mode === \"keyboard\"\n            ? \"bg-white text-blue-600 shadow-md\"\n            : \"bg-transparent text-gray-600 hover:bg-gray-200\"\n        }`}\n      >\n        Keyboard\n      </button>\n      <button\n        onClick={() => setMode(\"text-area\")}\n        className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 ${\n          mode === \"text-area\"\n            ? \"bg-white text-blue-600 shadow-md\"\n            : \"bg-transparent text-gray-600 hover:bg-gray-200\"\n        }`}\n      >\n        Text Area\n      </button>\n    </nav>\n  );\n}","import React, { useRef, useEffect } from 'react';\n\ninterface MousePadProps {\n//   onMouseDown?: (e: React.MouseEvent<HTMLCanvasElement> | React.TouchEvent<HTMLCanvasElement>) => void;\n//   onMouseUp?: (e: React.MouseEvent<HTMLCanvasElement> | React.TouchEvent<HTMLCanvasElement>) => void;\n  onMouseDown?: (e: string) => void;\n  onMouseUp?: (e: string) => void;\n}\n\nexport default function MousePad({ onMouseDown, onMouseUp }: MousePadProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  \n  // 初始化画布并设置坐标系原点为左下角\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // 保存初始状态\n    ctx.save();\n\n    // 移动原点：将原点从左上角移动到左下角\n    // 注意：这也会反转Y轴的方向（向上为正，向下为负）\n    ctx.translate(0, canvas.height);\n    ctx.scale(1, -1);\n\n    // 设置画布背景色（在转换后的坐标系下绘制）\n    // ctx.fillStyle = '#f0f0f0'; // 浅灰色背景\n    // ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // 绘制一个简单的参考线或点以示坐标方向\n    // ctx.fillStyle = 'blue';\n    // ctx.fillRect(10, 10, 5, 5); // 在靠近新原点（左下角）的位置画一个蓝色小方块\n\n    // 注意：后续所有的绘图操作都将基于这个新的坐标系\n\n    // 清理函数：组件卸载时恢复上下文状态（可选）\n    return () => {\n        ctx.restore();\n    };\n  }, []); // 空依赖数组确保effect只运行一次\n\n  // 处理鼠标/触摸按下事件\n  const handlePointerDown = (e: React.MouseEvent<HTMLCanvasElement> | React.TouchEvent<HTMLCanvasElement>) => {\n    e.preventDefault();\n    if (onMouseDown) onMouseDown(\"left\");\n  };\n\n  // 处理鼠标/触摸抬起事件\n  const handlePointerUp = (e: React.MouseEvent<HTMLCanvasElement> | React.TouchEvent<HTMLCanvasElement>) => {\n    e.preventDefault();\n    if (onMouseUp) onMouseUp(\"left\");\n  };\n\n  return (\n    <div className=\"flex justify-center items-center h-screen bg-gray-100 p-4\">\n      <canvas\n        ref={canvasRef}\n        width={'680'}\n        height={'720'}\n        className=\"bg-white rounded-lg shadow-md border border-gray-200\"\n        onMouseDown={handlePointerDown}\n        onMouseUp={handlePointerUp}\n        onTouchStart={handlePointerDown}\n        onTouchEnd={handlePointerUp}\n        style={{ touchAction: 'none' }} // 防止触摸时的默认行为（如滚动）\n      />\n    </div>\n  );\n}","import React, { useState } from 'react';\n\n// 定义组件Props接口\ninterface QwertyKeyboardProps {\n  onKeyPress?: (key: string) => void;\n}\n\n// 定义键盘按键组件Props接口\ninterface KeyButtonProps {\n  value: string;\n  onClick: () => void;\n  className?: string;\n}\n\n// 键盘按键组件\nconst KeyButton: React.FC<KeyButtonProps> = ({ value, onClick, className = '' }) => {\n  return (\n    <button\n      onClick={onClick}\n      className={`\n        flex items-center justify-center \n        bg-white text-gray-800 font-medium\n        border border-gray-300 \n        rounded-lg \n        shadow-sm \n        hover:bg-gray-50 \n        active:bg-gray-200 \n        active:scale-95\n        focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 \n        transition-all duration-150 \n        select-none\n        touch-manipulation\n        ${className}\n      `}\n      aria-label={`按键 ${value}`}\n    >\n      {value}\n    </button>\n  );\n};\n\nconst QwertyKeyboard: React.FC<QwertyKeyboardProps> = ({ onKeyPress }) => {\n  const [isShiftActive, setIsShiftActive] = useState<boolean>(false);\n  const [showSpecialChars, setShowSpecialChars] = useState<boolean>(false);\n  \n  // QWERTY键盘布局 - 包含所有0-9数字和a-z字母\n  const keyboardLayout: string[][] = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n    ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'],\n    ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l'],\n    ['z', 'x', 'c', 'v', 'b', 'n', 'm'],\n    [' '] // 空格键\n  ];\n\n  // 第一排特殊符号（常用符号）\n  const specialSymbolsRow1: string[] = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')'];\n  \n  // 第二排特殊符号（数学和货币符号）\n  const specialSymbolsRow2: string[] = ['-', '_', '+', '=', '{', '}', '[', ']', ':', '\"'];\n  \n  // 第三排特殊符号（其他符号）\n  const specialSymbolsRow3: string[] = ['|', '\\\\', ';', \"'\", '<', '>', ',', '.', '?', '/'];\n\n  // 特殊功能键\n  const specialKeys = {\n    shift: '⇧',\n    backspace: '⌫',\n    enter: '↩',\n    symbols: '☆#&'\n  };\n\n  const handleKeyClick = (key: string): void => {\n    if (key === 'shift') {\n      setIsShiftActive(prev => !prev);\n      return;\n    }\n    \n    if (key === 'symbols') {\n      setShowSpecialChars(prev => !prev);\n      return;\n    }\n    \n    let outputKey: string = key;\n    if (isShiftActive && key.length === 1 && key.match(/[a-z]/)) {\n      outputKey = key.toUpperCase();\n      setIsShiftActive(false); // 输入后自动关闭Shift\n    }\n    \n    if (onKeyPress) {\n      onKeyPress(outputKey);\n    }\n  };\n\n  const handleBackspace = (): void => {\n    if (onKeyPress) {\n      onKeyPress('backspace');\n    }\n  };\n\n  const handleEnter = (): void => {\n    if (onKeyPress) {\n      onKeyPress('enter');\n    }\n  };\n\n  // 渲染特殊符号键盘\n  const renderSpecialSymbols = () => {\n    if (!showSpecialChars) return null;\n\n    return (\n      <>\n        {/* 第一排特殊符号 */}\n        <div className=\"flex justify-center space-x-1\">\n          {specialSymbolsRow1.map((symbol, index) => (\n            <KeyButton \n              key={index} \n              value={symbol}\n              onClick={() => handleKeyClick(symbol)}\n              className=\"w-8 h-10 text-sm bg-yellow-100 hover:bg-yellow-200\"\n            />\n          ))}\n        </div>\n\n        {/* 第二排特殊符号 */}\n        <div className=\"flex justify-center space-x-1\">\n          {specialSymbolsRow2.map((symbol, index) => (\n            <KeyButton \n              key={index} \n              value={symbol}\n              onClick={() => handleKeyClick(symbol)}\n              className=\"w-8 h-10 text-sm bg-yellow-100 hover:bg-yellow-200\"\n            />\n          ))}\n        </div>\n\n        {/* 第三排特殊符号 */}\n        <div className=\"flex justify-center space-x-1\">\n          {specialSymbolsRow3.map((symbol, index) => (\n            <KeyButton \n              key={index} \n              value={symbol}\n              onClick={() => handleKeyClick(symbol)}\n              className=\"w-8 h-10 text-sm bg-yellow-100 hover:bg-yellow-200\"\n            />\n          ))}\n          <KeyButton \n            value=\"←\"\n            onClick={() => setShowSpecialChars(false)}\n            className=\"w-10 h-10 text-sm bg-red-100 hover:bg-red-200\"\n          />\n        </div>\n      </>\n    );\n  };\n\n  // 渲染标准键盘\n  const renderStandardKeyboard = () => {\n    if (showSpecialChars) return null;\n\n    return (\n      <>\n        {/* 数字行 */}\n        <div className=\"flex justify-center space-x-1\">\n          {keyboardLayout[0].map((key, index) => (\n            <KeyButton \n              key={index} \n              value={key}\n              onClick={() => handleKeyClick(key)}\n              className=\"w-8 h-10 text-sm\"\n            />\n          ))}\n          <KeyButton \n            value={specialKeys.backspace}\n            onClick={handleBackspace}\n            className=\"w-12 h-10 text-sm bg-red-100 hover:bg-red-200\"\n          />\n        </div>\n\n        {/* 字母行1 */}\n        <div className=\"flex justify-center space-x-1\">\n          {keyboardLayout[1].map((key, index) => (\n            <KeyButton \n              key={index} \n              value={key}\n              onClick={() => handleKeyClick(key)}\n              className=\"w-8 h-10 text-sm\"\n            />\n          ))}\n        </div>\n\n        {/* 字母行2 */}\n        <div className=\"flex justify-center space-x-1\">\n          <KeyButton \n            value={specialKeys.shift}\n            onClick={() => handleKeyClick('shift')}\n            className={`w-10 h-10 text-sm ${isShiftActive ? 'bg-blue-200' : 'bg-gray-200'}`}\n          />\n          {keyboardLayout[2].map((key, index) => (\n            <KeyButton \n              key={index} \n              value={key}\n              onClick={() => handleKeyClick(key)}\n              className=\"w-8 h-10 text-sm\"\n            />\n          ))}\n          <KeyButton \n            value={specialKeys.enter}\n            onClick={handleEnter}\n            className=\"w-10 h-10 text-sm bg-green-100 hover:bg-green-200\"\n          />\n        </div>\n\n        {/* 字母行3 */}\n        <div className=\"flex justify-center space-x-1\">\n          <KeyButton \n            value={specialKeys.symbols}\n            onClick={() => handleKeyClick('symbols')}\n            className=\"w-10 h-10 text-sm bg-purple-100 hover:bg-purple-200\"\n          />\n          {keyboardLayout[3].map((key, index) => (\n            <KeyButton \n              key={index} \n              value={key}\n              onClick={() => handleKeyClick(key)}\n              className=\"w-8 h-10 text-sm\"\n            />\n          ))}\n          <KeyButton \n            value={specialKeys.symbols}\n            onClick={() => handleKeyClick('symbols')}\n            className=\"w-10 h-10 text-sm bg-purple-100 hover:bg-purple-200\"\n          />\n        </div>\n\n        {/* 空格行 */}\n        <div className=\"flex justify-center\">\n          <KeyButton \n            value=\"空格\"\n            onClick={() => handleKeyClick(' ')}\n            className=\"w-64 h-10 text-sm\"\n          />\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"w-full max-w-md mx-auto bg-gray-100 rounded-xl shadow-lg p-3 safe-area-padding\">\n      {/* 键盘主体 */}\n      <div className=\"flex flex-col space-y-2\">\n        {renderSpecialSymbols()}\n        {renderStandardKeyboard()}\n      </div>\n    </div>\n  );\n};\n\nexport default QwertyKeyboard;","// 三种模式之一,只有输入框,并且停用鼠标\nimport React, { useState } from 'react';\n\nexport default function TextAreaWithButton({ onSubmit }: { onSubmit?: (text: string) => void }) {\n    const [text, setText] = useState('');\n\n    const handleSubmit = () => {\n        onSubmit?.(text);\n        setText('');\n    };\n\n    return (\n        <div className=\"p-4 space-y-3 bg-white rounded-lg shadow-sm\"> {/* 容器添加内边距、元素间距和背景样式 */}\n            <textarea\n                className=\"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\" \n                value={text}\n                onChange={(e) => setText(e.target.value)}\n                rows={4} // 设置默认行数\n                placeholder=\"请输入文本...\" // 添加占位符提示\n            />\n            <button\n                className=\"w-full px-4 py-2 bg-blue-500 text-white font-medium rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n                onClick={handleSubmit}\n                disabled={!text.trim()} // 当文本为空时禁用按钮\n            >\n                Submit\n            </button>\n        </div>\n    );\n}","import { useState, useEffect, useRef } from \"react\";\nimport ModeSelector from \"./ModeSelector\";\nimport MousePad from \"./MousePad\";\nimport Keyboard from \"./KeyBoard\";\nimport TextAreaWithButton from \"./TextAreaWithButton\";\nimport { createWebSocketConnection } from \"./websocket.js\";\n\n// 假设 createWebSocketConnection 是一个返回事件处理函数和 socket 实例的函数\n// 其具体实现可能因您的项目而异\nexport default function App({ url = \"\" }) {\n    const [error, setError] = useState(\"\");\n    const [mode, setMode] = useState(\"\");\n    // 使用 useRef 来持久化存储 socket 实例，避免组件重新渲染时其值被重置\n    const socketRef = useRef<WebSocket | null>(null);\n    // 同样使用 useRef 来存储事件处理函数，确保其引用稳定性（可选，取决于 createWebSocketConnection 的行为）\n    const eventHandlersRef = useRef<{\n        onMouse: (key: string) => void;\n        onText: (key: string) => void;\n        onKeyDown: (key: string) => void;\n        onKeyUp: (key: string) => void;\n    } | null>(null);\n\n    useEffect(() => {\n        if ((url && socketRef.current === null) || socketRef.current?.readyState !== WebSocket.OPEN) {\n            // 仅在 url 存在时创建连接\n            // 假设 createWebSocketConnection 返回一个对象，包含事件处理函数和 socket 实例\n            const { onMouse, onText, onKeyDown, onKeyUp, socket } = createWebSocketConnection(\n                url,\n                (msg) => { console.log(msg); },\n                (msg) => { setError(prev => prev + \"\\n\" + msg) }\n            );\n            // 将 socket 实例存储到 ref 中\n            socketRef.current = socket;\n            // 如果需要，也可以将事件处理函数存储到 ref 中，以确保在 useEffect 清理函数中能访问到最新的函数\n            eventHandlersRef.current = { onMouse, onText, onKeyDown, onKeyUp };\n        }\n        // setError(\"\");\n\n        // 清理函数：在组件卸载或 url 变化时执行\n        return () => {\n            if (socketRef.current) {\n                socketRef.current.close(); // 关闭 WebSocket 连接\n            }\n        };\n    }, [url]); // 此 effect 依赖于 url 的变化。当 url 改变时，会重新创建连接并清理旧的。\n\n    const onKeyPress = (key: string) => {\n        // 从 ref 中获取最新的 onKeyDown 和 onKeyUp 函数\n        eventHandlersRef.current?.onKeyDown(key);\n        eventHandlersRef.current?.onKeyUp(key);\n    };\n\n    if (url === \"\") return <div>please set url</div>;\n\n    // if (error) return <div>Error: {error}</div>;\n\n    return (\n        <>\n            <div>{error}</div>\n            <ModeSelector mode={mode} setMode={setMode}></ModeSelector>\n            {mode === \"mouse-pad\" && <MousePad onMouseDown={eventHandlersRef.current?.onMouse} />}\n            {mode === \"keyboard\" && <Keyboard onKeyPress={onKeyPress} />}\n            {mode === \"text-area\" && <TextAreaWithButton onSubmit={eventHandlersRef.current?.onText} />}\n        </>\n    );\n}\n","\n/**\n * 创建一个WebSocket连接并返回其控制方法及实例\n * @param {string} url - WebSocket服务器的URL\n * @returns {Object} 包含onText, onKey, onMouse, Close方法和ws对象的对象\n*/\nexport function createWebSocketConnection(url, onLog, onClose) {\n    let socket;\n\n    if (socket && (socket.readyState === WebSocket.OPEN || socket.readyState === WebSocket.CONNECTING)) {\n        onLog?.(\"WebSocket is already open or connecting.\");\n        return;\n    }\n\n    try {\n        socket = new WebSocket(url);\n\n        socket.onopen = () => {\n            onLog?.('WebSocket connection established.');\n        };\n\n\n        socket.onmessage = (event) => {\n            onLog?.('Message from server:', event.data);\n        };\n        socket.onclose = (event) => {\n            onLog?.('WebSocket connection closed:', event.code, event.reason);\n            // Optional: attempt to reconnect after a delay\n            onClose?.('WebSocket connection closed:', event.code, event.reason)\n        };\n        socket.onerror = (error) => {\n            onLog?.('WebSocket error:', error);\n        };\n\n        const handleMotion = (event) => {\n            // 反正没用到,不写了.\n        }\n\n        const handleOrientation = (event) => {\n            const currentGyro = {\n                alpha: event.alpha,\n                beta: event.beta,\n                gamma: event.gamma,\n            };\n            if (socket && socket.readyState === WebSocket.OPEN) {\n                socket.send(JSON.stringify(currentGyro));\n            }\n        }\n\n        // 请求和权限处理部分.\n        // iOS 13+ Safari specific permission request\n        if (typeof DeviceMotionEvent !== 'undefined' && typeof DeviceMotionEvent.requestPermission === 'function') {\n            DeviceMotionEvent.requestPermission()\n                .then(permissionState => {\n                    if (permissionState === 'granted') {\n                        window.addEventListener('devicemotion', handleMotion, true);\n                        onLog?.('加速度计权限已授予。');\n                    } else {\n                        onLog?.('加速度计权限被拒绝。');\n                    }\n                })\n                .catch(error => {\n                    onLog?.('请求加速度计权限时出错: ' + error);\n                    onLog?.('DeviceMotionEvent Error:', error);\n                });\n        } else {\n            // For other browsers or older iOS\n            if (window.DeviceMotionEvent) {\n                window.addEventListener('devicemotion', handleMotion, true);\n                onLog?.('尝试监听加速度计... (非iOS13+或安卓)');\n            } else {\n                onLog?.('此浏览器不支持加速度计事件。');\n            }\n        }\n\n        if (typeof DeviceOrientationEvent !== 'undefined' && typeof DeviceOrientationEvent.requestPermission === 'function') {\n            DeviceOrientationEvent.requestPermission()\n                .then(permissionState => {\n                    if (permissionState === 'granted') {\n                        window.addEventListener('deviceorientation', handleOrientation, true);\n                        // Append to status, don't overwrite if motion was successful\n                        onLog?.('陀螺仪权限已授予。');\n                    } else {\n                        onLog?.('陀螺仪权限被拒绝。');\n                    }\n                })\n                .catch(error => {\n                    onLog?.('请求陀螺仪权限时出错: ' + error);\n                    onLog?.('DeviceOrientationEvent Error:', error);\n                });\n        } else {\n            // For other browsers or older iOS\n            if (window.DeviceOrientationEvent) {\n                window.addEventListener('deviceorientation', handleOrientation, true);\n                onLog?.(' 尝试监听陀螺仪... (非iOS13+或安卓)');\n            } else {\n                onLog?.(' 此浏览器不支持陀螺仪事件。');\n            }\n        }\n\n\n\n        function onMouse(action = 'left click') {\n            onLog?.(\"Mouse action: \" + action);\n            if (socket && socket.readyState === WebSocket.OPEN) {\n                socket.send(JSON.stringify({\n                    mouse: action,\n                }));\n            }\n        }\n\n        function onText(text = \"\") {\n            onLog?.(\"Sending text: \" + text);\n            if (socket && socket.readyState === WebSocket.OPEN) {\n                socket.send(JSON.stringify({\n                    text: text,\n                }));\n            }\n        }\n\n        function onKeyDown(key = \"Enter\") {\n            onLog?.(\"Key down: \" + key);\n            console.log(socket);\n            console.log(socket.readyState);\n            console.log(WebSocket.OPEN);\n            if (socket && socket.readyState === WebSocket.OPEN) {\n                socket.send(JSON.stringify({\n                    keydown: key,\n                }));\n            }\n        }\n\n        function onKeyUp(key = \"Enter\") {\n            onLog?.(\"Key up: \" + key);\n            if (socket && socket.readyState === WebSocket.OPEN) {\n                socket.send(JSON.stringify({\n                    keyup: key,\n                }));\n            }\n        }\n\n        return {onMouse, onText, onKeyDown, onKeyUp, socket}\n    } catch (e) {\n        onClose?.(\"WebSocket error: \" + e.message);\n    }\n}","import { useState } from \"react\";\n\nimport InputBar from \"./InputBar\";\nimport ItemList from \"./ItemList\";\nimport Websocket from \"./Websocket\";\nimport App from \"./App\";\nimport useLocalStorage from \"../Tools/localstorage/useLocalStorageStatus\";\n\nexport default function KuukiMouse() {\n    const [item, setItem] = useState<string>(\"\");\n    const [items, setItems] = useLocalStorage(\"kuuki-mouse\", [\"ws://127.0.0.1:8765\"])\n\n    const onSubmit = (url: string) => {\n        setItems((prevItems: string[]) => [...prevItems, url]);\n    }\n    const onDeleteItem = (index: number) => {\n        setItems((prevItems: string[]) => prevItems.filter((_, i) => i !== index));\n    }\n    const onItemClick = (item: string) => {\n        setItem(item);\n    }\n\n    if (item !== \"\") {\n        return <main>\n            <App url={item} />\n        </main>\n    }\n\n    return <main>\n        <InputBar onSubmit={onSubmit} />\n        <ItemList items={items} onItemClick={onItemClick} onDeleteItem={onDeleteItem} />\n    </main>\n}"],"names":["useLocalStorage","key","initialValue","storedValue","setStoredValue","useState","window","item","localStorage","getItem","JSON","parse","error","console","setError","setValue","useCallback","value","valueToStore","Function","newValue","stringify","setItem","dispatchEvent","StorageEvent","err","e","useEffect","handleStorageChange","event","log","addEventListener","removeEventListener","_ref","onSubmit","url","inputValue","setInputValue","handleSubmit","trim","_jsxs","className","children","_jsx","type","onChange","target","onKeyDown","placeholder","onClick","ItemList","items","onItemClick","onDeleteItem","map","index","ModeSelector","mode","setMode","MousePad","onMouseDown","onMouseUp","canvasRef","useRef","canvas","current","ctx","getContext","save","translate","height","scale","restore","handlePointerDown","preventDefault","handlePointerUp","ref","width","onTouchStart","onTouchEnd","style","touchAction","KeyButton","_ref2","onKeyPress","isShiftActive","setIsShiftActive","showSpecialChars","setShowSpecialChars","keyboardLayout","specialSymbolsRow1","specialSymbolsRow2","specialSymbolsRow3","specialKeys","handleKeyClick","prev","outputKey","length","match","toUpperCase","handleBackspace","handleEnter","_Fragment","symbol","TextAreaWithButton","text","setText","rows","disabled","App","_eventHandlersRef$cur3","_eventHandlersRef$cur4","socketRef","eventHandlersRef","_socketRef$current","readyState","WebSocket","OPEN","onMouse","onText","onKeyUp","socket","onLog","onClose","CONNECTING","onopen","onmessage","data","onclose","code","reason","onerror","handleMotion","handleOrientation","currentGyro","alpha","beta","gamma","send","action","arguments","undefined","mouse","keydown","keyup","DeviceMotionEvent","requestPermission","then","permissionState","catch","DeviceOrientationEvent","message","createWebSocketConnection","msg","close","Keyboard","_eventHandlersRef$cur","_eventHandlersRef$cur2","KuukiMouse","setItems","InputBar","prevItems","filter","_","i"],"sourceRoot":""}